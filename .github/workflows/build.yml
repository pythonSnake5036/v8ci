# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-win:
    # The type of runner that the job will run on
    runs-on: windows-2022
    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cache depot_tools
        id: cache-depot-tools
        uses: actions/cache@v3
        with:
          path: C:\depot_tools
          key: ${{ runner.os }}-depot-tools
  
      - name: Download depot_tools
        if: steps.cache-depot-tools.outputs.cache-hit != 'true'
        run: |
          Invoke-WebRequest -Uri "https://storage.googleapis.com/chrome-infra/depot_tools.zip" -OutFile "C:\depot_tools.zip"
          Expand-Archive -LiteralPath 'C:\depot_tools.zip' -DestinationPath 'C:\depot_tools'

      - name: Add depot_tools to path
        run: Add-Content $env:GITHUB_PATH "C:\depot_tools"

      - run: gclient
        shell: cmd
      - name: Configure Git
        run: |
          git config --global core.autocrlf false
          git config --global core.filemode false
      - name: Download V8
        run: |
          mkdir v8
          cd v8
          fetch v8
          cd v8
      - name: Download build dependencies
        working-directory: v8/v8
        shell: cmd
        run: gclient sync
      - name: Compile
        working-directory: v8/v8
        shell: cmd
        run: |
          python tools/dev/v8gen.py x64.release.sample
          ninja -C out.gn/x64.release.sample v8_monolith
      - uses: actions/upload-artifact@v3
        with:
          name: v8_win_x64_release_sample
          path: v8/v8/out.gn/x64.release.sample
